name: Build, Test, and Package For Main Branch

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Build the package
        run: pnpm run build
      - name: Show dist directory size
        run: du -sh dist
      - name: Zip the dist folder
        run: pnpm zip-dist
      - name: Upload dist as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-folder
          path: dist.zip
          overwrite: true

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-folder
          path: ./
      - name: Unzip dist folder
        run: pnpm unzip-dist
      # - name: Run tests
      #   run: pnpm test

  release:
    runs-on: ubuntu-latest
    needs: [build, test]
    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://npm.pkg.github.com/"
          scope: "@leocodeio"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.INTERNAL_GITHUB_SECRET }}
        run: npx semantic-release
